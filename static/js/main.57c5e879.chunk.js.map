{"version":3,"sources":["components/Common/Card/index.jsx","components/root.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","useState","like","setLike","className","src","image","alt","title","description","date","type","onClick","API_KEY","Root","apod","setApod","render","setRender","isLoading","setIsLoading","useEffect","fetch","then","results","json","data","a","res","fetchData","href","map","explanation","url","window","scrollTo","top","behavior","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"yTAoBeA,MAhBf,SAAcC,GACZ,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKC,IAAKL,EAAMM,MAAOC,IAAKP,EAAMQ,QAClC,sBAAKJ,UAAU,OAAf,UACE,6BAAKJ,EAAMQ,QACX,4BAAIR,EAAMS,cACV,4BAAIT,EAAMU,OACV,wBAAQC,KAAK,SAASC,QAAS,kBAAMT,GAASD,IAA9C,SAAuDA,EAAgB,QAAT,gBCThEW,G,MAAU,4CAmEDC,MAjEf,WACE,MAAwBb,mBAAS,IAAjC,mBAAOc,EAAP,KAAaC,EAAb,KACA,EAA4Bf,oBAAS,GAArC,mBAAOgB,EAAP,KAAeC,EAAf,KACA,EAAiCjB,oBAAS,GAA1C,mBAAOkB,EAAP,KAAkBC,EAAlB,KA0BA,OAnBAC,qBAAU,WACRC,MAAM,uDAAD,OAAwDT,IAC5DU,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UACxBF,MAAK,SAAAG,GACJV,EAAQU,QAET,CAACT,IAEJI,qBAAU,YACO,uCAAG,8BAAAM,EAAA,6DAChBP,GAAa,GADG,SAEEE,MAAM,uDAAD,OAAwDT,IAF/D,cAEVe,EAFU,gBAGGA,EAAIH,OAHP,OAGVA,EAHU,OAIhBT,EAAQS,GACRL,GAAa,GALG,2CAAH,qDAOfS,KACC,CAACb,EAASC,IAGX,sBAAKb,UAAU,OAAf,UACE,sBAAKA,UAAU,SAAf,UACE,8CACA,oCAAM,mBAAG0B,KAAK,6CAAR,2BAAN,6DAEF,8BACIX,EAUA,qBAAKf,UAAU,UAAf,SACE,8CAVFW,EAAKgB,KAAI,SAAAL,GAAI,OACX,cAAC,EAAD,CACElB,MAAOkB,EAAKlB,MACZC,YAAaiB,EAAKM,YAClB1B,MAAOoB,EAAKO,IACZvB,KAAMgB,EAAKhB,YAUnB,qBAAKN,UAAU,UAAf,SACE,wBACEO,KAAK,SACLP,UAAU,gBACVQ,QAnDR,WACEM,GAAWD,GACXiB,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAU,YA8ChC,2B,MCnDOC,MANf,WACE,OACE,cAAC,EAAD,KCOWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAS9B,OACP,cAAC,IAAM+B,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.57c5e879.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport \"./styles.css\";\n\nfunction Card(props) {\n  const [like, setLike] = useState(false);\n\n  return (\n    <div className=\"Card\">\n      <img src={props.image} alt={props.title} />\n      <div className=\"info\">\n        <h2>{props.title}</h2>\n        <p>{props.description}</p>\n        <p>{props.date}</p>\n        <button type=\"button\" onClick={() => setLike(!like)}>{!like ? \"Like\" : \"Liked\"}</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;","import React, { useCallback, useEffect, useState } from 'react';\n\nimport Card from \"./Common/Card\";\nimport \"./styles.css\"\n\nconst API_KEY = \"Z5BdQe6xe3pDMJeZHWcnmB9IBKJAKR9MLuIUpiJd\";\n\nfunction Root() {\n  const [apod, setApod] = useState([]);\n  const [render, setRender] = useState(false);\n  const [isLoading, setIsLoading] =useState(false);\n\n  function handleShuffle() {\n    setRender(!render);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }\n\n  useEffect(() =>{\n    fetch(`https://api.nasa.gov/planetary/apod?count=6&api_key=${API_KEY}`)\n    .then(results => results.json())\n    .then(data => {\n      setApod(data)\n    })\n  }, [render]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      const res = await fetch(`https://api.nasa.gov/planetary/apod?count=6&api_key=${API_KEY}`);\n      const json = await res.json();\n      setApod(json);\n      setIsLoading(false);\n    };\n    fetchData();\n  }, [setApod, render]);\n\n  return (\n    <div className=\"root\">\n      <div className=\"header\">\n        <h1>Spacestagram</h1>\n        <p>by <a href=\"https://www.linkedin.com/in/anthonyreyesf/\">Anthony Reyes</a> - Software Developer intern @ Ada, previously @ D2L</p>\n      </div>\n      <div>\n        {!isLoading ? (\n          apod.map(data => (\n            <Card\n              title={data.title}\n              description={data.explanation}\n              image={data.url}\n              date={data.date}\n            />\n          ))\n        ) : (\n          <div className=\"loading\">\n            <h2>Loading...</h2>\n          </div>\n        )\n      }\n      </div>\n      <div className=\"shuffle\">\n        <button\n          type=\"button\"\n          className=\"shuffleButton\"\n          onClick={handleShuffle}\n        >\n          Shuffle\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Root;","import Root from \"./components/root\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <Root />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}